stages:
  - build
  - deploy

build-project:
  stage: build
  script:
    - echo "build @ package"
    - docker build --no-cache -t 91778825345/ci_cd_python_flask_project-"$CI_PIPELINE_ID" .
    - docker login -u $DOCKERHUBUSER -p $DOCKERHUBPASS
    - docker push 91778825345/ci_cd_python_flask_project-"$CI_PIPELINE_ID"
    - echo "build complete"
  only:
    - main
###### except:
#   - develop
  tags:
    - cicd_test_runner

deploy-project:
  stage: deploy
  script:
    - echo "deploy started"
    - echo "$CI_PIPELINE_ID"
#    - chmod -R 777 deploy/
#    - ls -la deploy/
#    - deploy/deploy.sh $DEVELOP_SERVER_252 91778825345/ci_cd_python_flask_project-"$CI_PIPELINE_ID"
    - containerName='cicd_repo'
#    - Get image name from the container
    - previousDockerImage="$(docker inspect --format='{{.Config.Image}}' $containerName)"

#    - Download the image from registry
#    - docker login -u $DOCKERHUBUSER -p $DOCKERHUBPASS
#    - docker pull $image
#   - Remove previous container
    - docker rm -f $containerName
#    - STAGE_SERVER = "1.1.1.1"
#    - connecting machine using authenticated user
    - stagepassword="P@ssword1"
    - sshpass -p $stagepassword ssh  -o StrictHostKeyChecking=no ubuntu@174.129.125.236

#    - connecting machine using pem key
#    - ssh -i "user1.pem" ubuntu@ec2-174-129-125-236.compute-1.amazonaws.com

      # Run the image on this port (instance port:container port) -p 5000:5050
    - docker run -p 8000:8080 --name $containerName  -d 91778825345/ci_cd_python_flask_project-"$CI_PIPELINE_ID"

      # Remove the image which was used by the previous container
    - if test ! -z "$previousDockerImage"
    - then
    - docker rmi $previousDockerImage
    - fi
    - echo "deploy ended"

  only:
    - main
  tags:
    - cicd_test_runner

# ref - https://docs.gitlab.com/ee/ci/yaml/